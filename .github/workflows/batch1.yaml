name: hello-world-msg

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Print a hello world message
      run: echo "Hello, world!"

  goodluck:
    runs-on: ubuntu-latest
    steps:
    - name: Print a goodluck message
      run: echo "Goodluck!"

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Ensure go.mod exists
      run: |
        cd codegen
        if [ ! -f go.mod ]; then
          go mod init example.com/m
        fi

    - name: Test
      run: cd codegen && go test -v ./...

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REGISTRY_ALIAS: my-ecr-public-registry-alias
        REPOSITORY: workflow-push # Replace with your repository name
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

  semgrep:
    needs: [build, goodluck, test]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Scan with Semgrep
      run: docker run --rm -v ${{ github.workspace }}:/src returntocorp/semgrep semgrep --config=p/security-audit --error --json > semgrep_results.json

    - name: Post Semgrep results as a comment
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const results = JSON.parse(fs.readFileSync('semgrep_results.json', 'utf8'));

          let commentBody = '## Semgrep Scan Results\n\n';
          if (results.results.length > 0) {
            results.results.forEach(result => {
              commentBody += `### ${result.check_id}\n`;
              commentBody += `**Reason:** ${result.extra.message}\n\n`;
            });
          } else {
            commentBody += 'No vulnerabilities found.';
          }

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });