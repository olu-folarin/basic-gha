# first, give the workflow a name
name: hello-world-msg

# next, define when the workflow should run
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

# define the jobs that the workflow should run
jobs:
  build:
    runs-on: ubuntu-latest

    # steps that the job will run
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Print a hello world message
      run: echo "Hello, world!"
  goodluck:
    runs-on: ubuntu-24.04
    steps:
        - name: print a goodluck message
          run: echo "Goodluck!"

  # lint for go code
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Set GOPATH
        run: echo "GOPATH=$HOME/go" >> $GITHUB_ENV

      - name: Set GOMODCACHE
        run: echo "GOMODCACHE=$HOME/go/pkg/mod" >> $GITHUB_ENV

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.53.3

      - name: Clean Cache
        run: |
          golangci-lint cache clean
          go clean -modcache -cache -i

      - name: Ensure go.mod exists
        run: |
          cd codegen
          if [ ! -f go.mod ]; then
            go mod init github.com/olu-folarin/basic-gha/codegen
          fi

      - name: Tidy Go Modules
        run: cd codegen && go mod tidy

      - name: Print Go Environment
        run: go env

      - name: Lint
        run: golangci-lint run -v --timeout=5s ./codegen/...



  # test for go code
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Ensure go.mod exists
      run: |
        cd codegen
        if [ ! -f go.mod ]; then
          go mod init example.com/m
        fi

    - name: Test
      run: cd codegen && go test -v ./...

  # scan with semgrep
  semgrep:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Scan with Semgrep
      run: docker run --rm -v ${{ github.workspace }}:/src returntocorp/semgrep semgrep --config=p/r2c-ci