name: Dependabot Alerts

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: read
  security-events: write
  issues: write
  pull-requests: write

jobs:
  check-alerts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Get Dependabot alerts
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts")
        
        if echo "$response" | jq -e 'has("message")' > /dev/null; then
          echo "::warning::Error accessing Dependabot alerts: $(echo "$response" | jq -r '.message')"
          echo "[]" > dependabot_alerts.json
        else
          echo "$response" > dependabot_alerts.json
          
          if echo "$response" | jq -e 'length > 0' > /dev/null; then
            echo "::error::Found Dependabot security alerts"
            echo "SCAN_FAILED=true" >> $GITHUB_ENV
            exit 1
          fi
        fi
    - name: Post results
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          let alerts = [];
          try {
            const content = fs.readFileSync('dependabot_alerts.json', 'utf8');
            alerts = JSON.parse(content);
            if (!Array.isArray(alerts)) alerts = [];
          } catch (error) {
            console.error('Error parsing results:', error);
          }
          
          const comment = `## Dependabot Security Scan Results
          ${alerts.length ? '⚠️ **Vulnerabilities Found**' : '✅ **No Vulnerabilities Found**'}
          
          ${alerts.map(alert => `
          ### ${alert.security_advisory?.summary || 'Unknown Vulnerability'}
          - **Severity**: ${alert.security_advisory?.severity || 'Unknown'}
          - **Package**: ${alert.dependency?.package?.name || 'Unknown'}
          - **Current Version**: ${alert.dependency?.version || 'Unknown'}
          - **Fixed Version**: ${alert.security_advisory?.patched_versions?.[0] || 'Unknown'}
          
          **Description**:
          ${alert.security_advisory?.description || 'No description available'}
          `).join('\n')}`;
          
          await github.rest.issues.create({
            ...context.repo,
            title: 'Dependabot Security Alert Summary',
            body: comment,
            labels: ['security']
          });